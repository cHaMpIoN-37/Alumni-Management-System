{"ast":null,"code":"var _jsxFileName = \"/home/hannan/Alma/frontend/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chat({\n  user,\n  userRole\n}) {\n  _s();\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [message, setMessage] = useState('');\n  const [chats, setChats] = useState({\n    \"sarah@example.com\": {\n      name: \"Sarah Johnson\",\n      role: \"alumni\",\n      messages: [\"Hi! How can I help you with your career?\"]\n    },\n    \"mike@college.edu\": {\n      name: \"Mike Chen\",\n      role: \"student\",\n      messages: [\"Hello! I'm interested in software engineering roles.\"]\n    }\n  });\n  const getContacts = () => {\n    if (userRole === 'student') {\n      // Students can only message alumni\n      return Object.entries(chats).filter(([email, contact]) => contact.role === 'alumni');\n    } else {\n      // Alumni and admin can message everyone\n      return Object.entries(chats);\n    }\n  };\n  const sendMessage = () => {\n    if (!message.trim() || !selectedContact) return;\n    setChats(prev => ({\n      ...prev,\n      [selectedContact]: {\n        ...prev[selectedContact],\n        messages: [...prev[selectedContact].messages, `${user.name}: ${message}`]\n      }\n    }));\n    setMessage('');\n  };\n  const contacts = getContacts();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container slide-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-interface\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contacts-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), contacts.map(([email, contact]) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `contact-item ${selectedContact === email ? 'active' : ''}`,\n          onClick: () => setSelectedContact(email),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-avatar\",\n            children: contact.name.split(' ').map(n => n[0]).join('')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contact-name\",\n              children: contact.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contact-role\",\n              children: contact.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, email, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-window\",\n        children: selectedContact ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: chats[selectedContact].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"role-badge\",\n              children: chats[selectedContact].role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages-container\",\n            children: chats[selectedContact].messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message\",\n              children: msg\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Type your message...\",\n              value: message,\n              onChange: e => setMessage(e.target.value),\n              onKeyPress: e => e.key === 'Enter' && sendMessage()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: sendMessage,\n              className: \"btn btn-primary\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-chat-selected\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a contact to start messaging\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"Y9EqVBtRQ4MNWRG6Us0I+0gLX1A=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","user","userRole","_s","selectedContact","setSelectedContact","message","setMessage","chats","setChats","name","role","messages","getContacts","Object","entries","filter","email","contact","sendMessage","trim","prev","contacts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","split","n","join","msg","index","type","placeholder","value","onChange","e","target","onKeyPress","key","_c","$RefreshReg$"],"sources":["/home/hannan/Alma/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Chat.css';\r\n\r\nexport default function Chat({ user, userRole }) {\r\n  const [selectedContact, setSelectedContact] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [chats, setChats] = useState({\r\n    \"sarah@example.com\": {\r\n      name: \"Sarah Johnson\",\r\n      role: \"alumni\",\r\n      messages: [\"Hi! How can I help you with your career?\"]\r\n    },\r\n    \"mike@college.edu\": {\r\n      name: \"Mike Chen\",\r\n      role: \"student\", \r\n      messages: [\"Hello! I'm interested in software engineering roles.\"]\r\n    }\r\n  });\r\n\r\n  const getContacts = () => {\r\n    if (userRole === 'student') {\r\n      // Students can only message alumni\r\n      return Object.entries(chats).filter(([email, contact]) => contact.role === 'alumni');\r\n    } else {\r\n      // Alumni and admin can message everyone\r\n      return Object.entries(chats);\r\n    }\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (!message.trim() || !selectedContact) return;\r\n    \r\n    setChats(prev => ({\r\n      ...prev,\r\n      [selectedContact]: {\r\n        ...prev[selectedContact],\r\n        messages: [...prev[selectedContact].messages, `${user.name}: ${message}`]\r\n      }\r\n    }));\r\n    setMessage('');\r\n  };\r\n\r\n  const contacts = getContacts();\r\n\r\n  return (\r\n    <div className=\"chat-container slide-up\">\r\n      <h2>Messages</h2>\r\n      \r\n      <div className=\"chat-interface\">\r\n        <div className=\"contacts-list\">\r\n          <h3>Contacts</h3>\r\n          {contacts.map(([email, contact]) => (\r\n            <button\r\n              key={email}\r\n              className={`contact-item ${selectedContact === email ? 'active' : ''}`}\r\n              onClick={() => setSelectedContact(email)}\r\n            >\r\n              <div className=\"contact-avatar\">\r\n                {contact.name.split(' ').map(n => n[0]).join('')}\r\n              </div>\r\n              <div className=\"contact-info\">\r\n                <div className=\"contact-name\">{contact.name}</div>\r\n                <div className=\"contact-role\">{contact.role}</div>\r\n              </div>\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"chat-window\">\r\n          {selectedContact ? (\r\n            <>\r\n              <div className=\"chat-header\">\r\n                <h4>{chats[selectedContact].name}</h4>\r\n                <span className=\"role-badge\">{chats[selectedContact].role}</span>\r\n              </div>\r\n              \r\n              <div className=\"messages-container\">\r\n                {chats[selectedContact].messages.map((msg, index) => (\r\n                  <div key={index} className=\"message\">\r\n                    {msg}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              \r\n              <div className=\"message-input\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Type your message...\"\r\n                  value={message}\r\n                  onChange={e => setMessage(e.target.value)}\r\n                  onKeyPress={e => e.key === 'Enter' && sendMessage()}\r\n                />\r\n                <button onClick={sendMessage} className=\"btn btn-primary\">Send</button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <div className=\"no-chat-selected\">\r\n              <p>Select a contact to start messaging</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpB,eAAe,SAASC,IAAIA,CAAC;EAAEC,IAAI;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC;IACjC,mBAAmB,EAAE;MACnBe,IAAI,EAAE,eAAe;MACrBC,IAAI,EAAE,QAAQ;MACdC,QAAQ,EAAE,CAAC,0CAA0C;IACvD,CAAC;IACD,kBAAkB,EAAE;MAClBF,IAAI,EAAE,WAAW;MACjBC,IAAI,EAAE,SAAS;MACfC,QAAQ,EAAE,CAAC,sDAAsD;IACnE;EACF,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIX,QAAQ,KAAK,SAAS,EAAE;MAC1B;MACA,OAAOY,MAAM,CAACC,OAAO,CAACP,KAAK,CAAC,CAACQ,MAAM,CAAC,CAAC,CAACC,KAAK,EAAEC,OAAO,CAAC,KAAKA,OAAO,CAACP,IAAI,KAAK,QAAQ,CAAC;IACtF,CAAC,MAAM;MACL;MACA,OAAOG,MAAM,CAACC,OAAO,CAACP,KAAK,CAAC;IAC9B;EACF,CAAC;EAED,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACb,OAAO,CAACc,IAAI,CAAC,CAAC,IAAI,CAAChB,eAAe,EAAE;IAEzCK,QAAQ,CAACY,IAAI,KAAK;MAChB,GAAGA,IAAI;MACP,CAACjB,eAAe,GAAG;QACjB,GAAGiB,IAAI,CAACjB,eAAe,CAAC;QACxBQ,QAAQ,EAAE,CAAC,GAAGS,IAAI,CAACjB,eAAe,CAAC,CAACQ,QAAQ,EAAE,GAAGX,IAAI,CAACS,IAAI,KAAKJ,OAAO,EAAE;MAC1E;IACF,CAAC,CAAC,CAAC;IACHC,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMe,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,oBACEhB,OAAA;IAAK0B,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtC3B,OAAA;MAAA2B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjB/B,OAAA;MAAK0B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B3B,OAAA;QAAK0B,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B3B,OAAA;UAAA2B,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAChBN,QAAQ,CAACO,GAAG,CAAC,CAAC,CAACZ,KAAK,EAAEC,OAAO,CAAC,kBAC7BrB,OAAA;UAEE0B,SAAS,EAAE,gBAAgBnB,eAAe,KAAKa,KAAK,GAAG,QAAQ,GAAG,EAAE,EAAG;UACvEa,OAAO,EAAEA,CAAA,KAAMzB,kBAAkB,CAACY,KAAK,CAAE;UAAAO,QAAA,gBAEzC3B,OAAA;YAAK0B,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAC5BN,OAAO,CAACR,IAAI,CAACqB,KAAK,CAAC,GAAG,CAAC,CAACF,GAAG,CAACG,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE;UAAC;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC,eACN/B,OAAA;YAAK0B,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3B3B,OAAA;cAAK0B,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAEN,OAAO,CAACR;YAAI;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAClD/B,OAAA;cAAK0B,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAEN,OAAO,CAACP;YAAI;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC;QAAA,GAVDX,KAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWJ,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEN/B,OAAA;QAAK0B,SAAS,EAAC,aAAa;QAAAC,QAAA,EACzBpB,eAAe,gBACdP,OAAA,CAAAE,SAAA;UAAAyB,QAAA,gBACE3B,OAAA;YAAK0B,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1B3B,OAAA;cAAA2B,QAAA,EAAKhB,KAAK,CAACJ,eAAe,CAAC,CAACM;YAAI;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtC/B,OAAA;cAAM0B,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAEhB,KAAK,CAACJ,eAAe,CAAC,CAACO;YAAI;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9D,CAAC,eAEN/B,OAAA;YAAK0B,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAChChB,KAAK,CAACJ,eAAe,CAAC,CAACQ,QAAQ,CAACiB,GAAG,CAAC,CAACK,GAAG,EAAEC,KAAK,kBAC9CtC,OAAA;cAAiB0B,SAAS,EAAC,SAAS;cAAAC,QAAA,EACjCU;YAAG,GADIC,KAAK;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAEN/B,OAAA;YAAK0B,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5B3B,OAAA;cACEuC,IAAI,EAAC,MAAM;cACXC,WAAW,EAAC,sBAAsB;cAClCC,KAAK,EAAEhC,OAAQ;cACfiC,QAAQ,EAAEC,CAAC,IAAIjC,UAAU,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;cAC1CI,UAAU,EAAEF,CAAC,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAIxB,WAAW,CAAC;YAAE;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrD,CAAC,eACF/B,OAAA;cAAQiC,OAAO,EAAEX,WAAY;cAACI,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpE,CAAC;QAAA,eACN,CAAC,gBAEH/B,OAAA;UAAK0B,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAC/B3B,OAAA;YAAA2B,QAAA,EAAG;UAAmC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzB,EAAA,CArGuBH,IAAI;AAAA4C,EAAA,GAAJ5C,IAAI;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}